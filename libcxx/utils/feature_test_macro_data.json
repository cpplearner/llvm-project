[
    {
        "name": "__cpp_lib_adaptor_iterator_pair_constructor",
        "values": {
            "c++23": {
                "202106": [
                    {
                        "implemented": true
                    }
                ]
            }
        },
        "headers": [
            "queue",
            "stack"
        ]
    },
    {
        "name": "__cpp_lib_addressof_constexpr",
        "values": {
            "c++17": {
                "201603": [
                    {
                        "implemented": true
                    }
                ]
            }
        },
        "headers": [
            "memory"
        ]
    },
    {
        "name": "__cpp_lib_algorithm_default_value_type",
        "values": {
            "c++26": {
                "202403": [
                    {
                        "number": "P2248R8",
                        "title": "Enabling list-initialization for algorithms",
                        "implemented": false
                    }
                ]
            }
        },
        "headers": [
            "algorithm",
            "deque",
            "forward_list",
            "list",
            "ranges",
            "string",
            "vector"
        ]
    },
    {
        "name": "__cpp_lib_algorithm_iterator_requirements",
        "values": {
            "c++23": {
                "202207": [
                    {
                        "number": "P2408R5",
                        "title": "Ranges iterators as inputs to non-Ranges algorithms",
                        "implemented": false
                    }
                ]
            }
        },
        "headers": [
            "algorithm",
            "memory",
            "numeric"
        ]
    },
    {
        "name": "__cpp_lib_allocate_at_least",
        "values": {
            "c++23": {
                "202302": [
                    {
                        "implemented": true
                    }
                ]
            }
        },
        "headers": [
            "memory"
        ]
    },
    {
        "name": "__cpp_lib_allocator_traits_is_always_equal",
        "values": {
            "c++17": {
                "201411": [
                    {
                        "implemented": true
                    }
                ]
            }
        },
        "headers": [
            "deque",
            "forward_list",
            "list",
            "map",
            "memory",
            "scoped_allocator",
            "set",
            "string",
            "unordered_map",
            "unordered_set",
            "vector"
        ]
    },
    {
        "name": "__cpp_lib_any",
        "values": {
            "c++17": {
                "201606": [
                    {
                        "implemented": true
                    }
                ]
            }
        },
        "headers": [
            "any"
        ]
    },
    {
        "name": "__cpp_lib_apply",
        "values": {
            "c++17": {
                "201603": [
                    {
                        "implemented": true
                    }
                ]
            }
        },
        "headers": [
            "tuple"
        ]
    },
    {
        "name": "__cpp_lib_array_constexpr",
        "values": {
            "c++17": {
                "201603": [
                    {
                        "implemented": true
                    }
                ]
            },
            "c++20": {
                "201811": [
                    {
                        "implemented": true
                    }
                ]
            }
        },
        "headers": [
            "array",
            "iterator"
        ]
    },
    {
        "name": "__cpp_lib_as_const",
        "values": {
            "c++17": {
                "201510": [
                    {
                        "implemented": true
                    }
                ]
            }
        },
        "headers": [
            "utility"
        ]
    },
    {
        "name": "__cpp_lib_associative_heterogeneous_erasure",
        "values": {
            "c++23": {
                "202110": [
                    {
                        "number": "P2077R3",
                        "title": "Heterogeneous erasure overloads for associative containers",
                        "implemented": false
                    }
                ]
            }
        },
        "headers": [
            "map",
            "set",
            "unordered_map",
            "unordered_set"
        ]
    },
    {
        "name": "__cpp_lib_associative_heterogeneous_insertion",
        "values": {
            "c++26": {
                "202306": [
                    {
                        "number": "P2363R5",
                        "title": "Extending associative containers with the remaining heterogeneous overloads",
                        "implemented": false
                    }
                ]
            }
        },
        "headers": [
            "map",
            "set",
            "unordered_map",
            "unordered_set"
        ]
    },
    {
        "name": "__cpp_lib_assume_aligned",
        "values": {
            "c++20": {
                "201811": [
                    {
                        "implemented": true
                    }
                ]
            }
        },
        "headers": [
            "memory"
        ]
    },
    {
        "name": "__cpp_lib_atomic_flag_test",
        "values": {
            "c++20": {
                "201907": [
                    {
                        "implemented": true
                    }
                ]
            }
        },
        "headers": [
            "atomic"
        ]
    },
    {
        "name": "__cpp_lib_atomic_float",
        "values": {
            "c++20": {
                "201711": [
                    {
                        "number": "P0020R6",
                        "title": "Floating Point Atomic",
                        "implemented": false
                    }
                ]
            }
        },
        "headers": [
            "atomic"
        ]
    },
    {
        "name": "__cpp_lib_atomic_is_always_lock_free",
        "values": {
            "c++17": {
                "201603": [
                    {
                        "implemented": true
                    }
                ]
            }
        },
        "headers": [
            "atomic"
        ]
    },
    {
        "name": "__cpp_lib_atomic_lock_free_type_aliases",
        "values": {
            "c++20": {
                "201907": [
                    {
                        "implemented": true
                    }
                ]
            }
        },
        "headers": [
            "atomic"
        ]
    },
    {
        "name": "__cpp_lib_atomic_min_max",
        "values": {
            "c++26": {
                "202403": [
                    {
                        "number": "P0493R5",
                        "title": "Atomic maximum/minimum",
                        "implemented": false
                    }
                ]
            }
        },
        "headers": [
            "atomic"
        ]
    },
    {
        "name": "__cpp_lib_atomic_ref",
        "values": {
            "c++20": {
                "201806": [
                    {
                        "implemented": true
                    }
                ]
            }
        },
        "headers": [
            "atomic"
        ]
    },
    {
        "name": "__cpp_lib_atomic_shared_ptr",
        "values": {
            "c++20": {
                "201711": [
                    {
                        "number": "P0718R2",
                        "title": "Revising atomic_shared_ptr for C++20",
                        "implemented": false
                    }
                ]
            }
        },
        "headers": [
            "memory"
        ]
    },
    {
        "name": "__cpp_lib_atomic_value_initialization",
        "values": {
            "c++20": {
                "201911": [
                    {
                        "implemented": true
                    }
                ]
            }
        },
        "headers": [
            "atomic",
            "memory"
        ]
    },
    {
        "name": "__cpp_lib_atomic_wait",
        "values": {
            "c++20": {
                "201907": [
                    {
                        "implemented": true
                    }
                ]
            }
        },
        "headers": [
            "atomic"
        ],
        "test_suite_guard": "!defined(_LIBCPP_VERSION) || _LIBCPP_AVAILABILITY_HAS_SYNC",
        "libcxx_guard": "_LIBCPP_AVAILABILITY_HAS_SYNC"
    },
    {
        "name": "__cpp_lib_barrier",
        "values": {
            "c++20": {
                "201907": [
                    {
                        "implemented": true
                    }
                ]
            },
            "c++23": {
                "202302": [
                    {
                        "number": "P2588R3",
                        "title": "Relax std::barrier phase completion step guarantees",
                        "implemented": false
                    }
                ]
            }
        },
        "headers": [
            "barrier"
        ],
        "test_suite_guard": "!defined(_LIBCPP_HAS_NO_THREADS) && (!defined(_LIBCPP_VERSION) || _LIBCPP_AVAILABILITY_HAS_SYNC)",
        "libcxx_guard": "!defined(_LIBCPP_HAS_NO_THREADS) && _LIBCPP_AVAILABILITY_HAS_SYNC"
    },
    {
        "name": "__cpp_lib_bind_back",
        "values": {
            "c++23": {
                "202202": [
                    {
                        "implemented": true
                    }
                ]
            },
            "c++26": {
                "202306": [
                    {
                        "number": "P2714R1",
                        "title": "Bind front and back to NTTP callables",
                        "implemented": false
                    }
                ]
            }
        },
        "headers": [
            "functional"
        ]
    },
    {
        "name": "__cpp_lib_bind_front",
        "values": {
            "c++20": {
                "201907": [
                    {
                        "implemented": true
                    }
                ]
            },
            "c++26": {
                "202306": [
                    {
                        "implemented": true
                    }
                ]
            }
        },
        "headers": [
            "functional"
        ]
    },
    {
        "name": "__cpp_lib_bit_cast",
        "values": {
            "c++20": {
                "201806": [
                    {
                        "implemented": true
                    }
                ]
            }
        },
        "headers": [
            "bit"
        ]
    },
    {
        "name": "__cpp_lib_bitops",
        "values": {
            "c++20": {
                "201907": [
                    {
                        "implemented": true
                    }
                ]
            }
        },
        "headers": [
            "bit"
        ]
    },
    {
        "name": "__cpp_lib_bitset",
        "values": {
            "c++26": {
                "202306": [
                    {
                        "implemented": true
                    }
                ]
            }
        },
        "headers": [
            "bitset"
        ]
    },
    {
        "name": "__cpp_lib_bool_constant",
        "values": {
            "c++17": {
                "201505": [
                    {
                        "implemented": true
                    }
                ]
            }
        },
        "headers": [
            "type_traits"
        ]
    },
    {
        "name": "__cpp_lib_bounded_array_traits",
        "values": {
            "c++20": {
                "201902": [
                    {
                        "implemented": true
                    }
                ]
            }
        },
        "headers": [
            "type_traits"
        ]
    },
    {
        "name": "__cpp_lib_boyer_moore_searcher",
        "values": {
            "c++17": {
                "201603": [
                    {
                        "implemented": true
                    }
                ]
            }
        },
        "headers": [
            "functional"
        ]
    },
    {
        "name": "__cpp_lib_byte",
        "values": {
            "c++17": {
                "201603": [
                    {
                        "implemented": true
                    }
                ]
            }
        },
        "headers": [
            "cstddef"
        ]
    },
    {
        "name": "__cpp_lib_byteswap",
        "values": {
            "c++23": {
                "202110": [
                    {
                        "implemented": true
                    }
                ]
            }
        },
        "headers": [
            "bit"
        ]
    },
    {
        "name": "__cpp_lib_char8_t",
        "values": {
            "c++20": {
                "201907": [
                    {
                        "implemented": true
                    }
                ]
            }
        },
        "headers": [
            "atomic",
            "filesystem",
            "istream",
            "limits",
            "locale",
            "ostream",
            "string",
            "string_view"
        ],
        "test_suite_guard": "defined(__cpp_char8_t)",
        "libcxx_guard": "!defined(_LIBCPP_HAS_NO_CHAR8_T)"
    },
    {
        "name": "__cpp_lib_chrono",
        "values": {
            "c++17": {
                "201611": [
                    {
                        "implemented": true
                    }
                ]
            },
            "c++20": {
                "201803": [
                    {
                        "number": "P0355R7",
                        "title": "Extending <chrono> to Calendars and Time Zones",
                        "implemented": false
                    }
                ],
                "201907": [
                    {
                        "number": "P1466R3",
                        "title": "Miscellaneous minor fixes for chrono",
                        "implemented": false
                    }
                ]
            },
            "c++26": {
                "202306": [
                    {
                        "number": "P2592R3",
                        "title": "Hashing support for std::chrono value classes",
                        "implemented": false
                    }
                ]
            }
        },
        "headers": [
            "chrono"
        ]
    },
    {
        "name": "__cpp_lib_chrono_udls",
        "values": {
            "c++14": {
                "201304": [
                    {
                        "implemented": true
                    }
                ]
            }
        },
        "headers": [
            "chrono"
        ]
    },
    {
        "name": "__cpp_lib_clamp",
        "values": {
            "c++17": {
                "201603": [
                    {
                        "implemented": true
                    }
                ]
            }
        },
        "headers": [
            "algorithm"
        ]
    },
    {
        "name": "__cpp_lib_common_reference",
        "values": {
            "c++23": {
                "202302": [
                    {
                        "number": "P2655R3",
                        "title": "common_reference_t of reference_wrapper Should Be a Reference Type",
                        "implemented": false
                    }
                ]
            }
        },
        "headers": [
            "type_traits"
        ]
    },
    {
        "name": "__cpp_lib_common_reference_wrapper",
        "values": {
            "c++23": {
                "202302": [
                    {
                        "number": "P2655R3",
                        "title": "common_reference_t of reference_wrapper Should Be a Reference Type",
                        "implemented": false
                    }
                ]
            }
        },
        "headers": [
            "functional"
        ]
    },
    {
        "name": "__cpp_lib_complex_udls",
        "values": {
            "c++14": {
                "201309": [
                    {
                        "implemented": true
                    }
                ]
            }
        },
        "headers": [
            "complex"
        ]
    },
    {
        "name": "__cpp_lib_concepts",
        "values": {
            "c++20": {
                "202002": [
                    {
                        "implemented": true
                    }
                ]
            },
            "c++23": {
                "202207": [
                    {
                        "number": "P2404R3",
                        "title": "Move-only types for equality_comparable_with, totally_ordered_with, and three_way_comparable_with",
                        "implemented": false
                    }
                ]
            }
        },
        "headers": [
            "compare",
            "concepts"
        ]
    },
    {
        "name": "__cpp_lib_constexpr_algorithms",
        "values": {
            "c++20": {
                "201806": [
                    {
                        "implemented": true
                    }
                ]
            },
            "c++26": {
                "202306": [
                    {
                        "number": "P2562R1",
                        "title": "constexpr Stable Sorting",
                        "implemented": false
                    }
                ]
            }
        },
        "headers": [
            "algorithm",
            "utility"
        ]
    },
    {
        "name": "__cpp_lib_constexpr_bitset",
        "values": {
            "c++23": {
                "202207": [
                    {
                        "implemented": true
                    }
                ]
            }
        },
        "headers": [
            "bitset"
        ]
    },
    {
        "name": "__cpp_lib_constexpr_charconv",
        "values": {
            "c++23": {
                "202207": [
                    {
                        "implemented": true
                    }
                ]
            }
        },
        "headers": [
            "charconv"
        ]
    },
    {
        "name": "__cpp_lib_constexpr_cmath",
        "values": {
            "c++23": {
                "202202": [
                    {
                        "number": "P0533R9",
                        "title": "constexpr for cmath and cstdlib",
                        "implemented": false
                    }
                ]
            },
            "c++26": {
                "202306": [
                    {
                        "number": "P1383R2",
                        "title": "More constexpr for cmath and complex",
                        "implemented": false
                    }
                ]
            }
        },
        "headers": [
            "cmath",
            "cstdlib"
        ]
    },
    {
        "name": "__cpp_lib_constexpr_complex",
        "values": {
            "c++20": {
                "201711": [
                    {
                        "implemented": true
                    }
                ]
            },
            "c++26": {
                "202306": [
                    {
                        "number": "P1383R2",
                        "title": "More constexpr for cmath and complex",
                        "implemented": false
                    }
                ]
            }
        },
        "headers": [
            "complex"
        ]
    },
    {
        "name": "__cpp_lib_constexpr_dynamic_alloc",
        "values": {
            "c++20": {
                "201907": [
                    {
                        "implemented": true
                    }
                ]
            }
        },
        "headers": [
            "memory"
        ]
    },
    {
        "name": "__cpp_lib_constexpr_functional",
        "values": {
            "c++20": {
                "201907": [
                    {
                        "implemented": true
                    }
                ]
            }
        },
        "headers": [
            "functional"
        ]
    },
    {
        "name": "__cpp_lib_constexpr_iterator",
        "values": {
            "c++20": {
                "201811": [
                    {
                        "implemented": true
                    }
                ]
            }
        },
        "headers": [
            "iterator"
        ]
    },
    {
        "name": "__cpp_lib_constexpr_memory",
        "values": {
            "c++20": {
                "201811": [
                    {
                        "implemented": true
                    }
                ]
            },
            "c++23": {
                "202202": [
                    {
                        "implemented": true
                    }
                ]
            }
        },
        "headers": [
            "memory"
        ]
    },
    {
        "name": "__cpp_lib_constexpr_new",
        "values": {
            "c++26": {
                "202406": [
                    {
                        "implemented": true
                    }
                ]
            }
        },
        "headers": [
            "new"
        ],
        "test_suite_guard": "!defined(_LIBCPP_ABI_VCRUNTIME)",
        "libcxx_guard": "!defined(_LIBCPP_ABI_VCRUNTIME)"
    },
    {
        "name": "__cpp_lib_constexpr_numeric",
        "values": {
            "c++20": {
                "201911": [
                    {
                        "implemented": true
                    }
                ]
            }
        },
        "headers": [
            "numeric"
        ]
    },
    {
        "name": "__cpp_lib_constexpr_string",
        "values": {
            "c++20": {
                "201907": [
                    {
                        "implemented": true
                    }
                ]
            }
        },
        "headers": [
            "string"
        ]
    },
    {
        "name": "__cpp_lib_constexpr_string_view",
        "values": {
            "c++20": {
                "201811": [
                    {
                        "implemented": true
                    }
                ]
            }
        },
        "headers": [
            "string_view"
        ]
    },
    {
        "name": "__cpp_lib_constexpr_tuple",
        "values": {
            "c++20": {
                "201811": [
                    {
                        "implemented": true
                    }
                ]
            }
        },
        "headers": [
            "tuple"
        ]
    },
    {
        "name": "__cpp_lib_constexpr_typeinfo",
        "values": {
            "c++23": {
                "202106": [
                    {
                        "implemented": true
                    }
                ]
            }
        },
        "headers": [
            "typeinfo"
        ]
    },
    {
        "name": "__cpp_lib_constexpr_utility",
        "values": {
            "c++20": {
                "201811": [
                    {
                        "implemented": true
                    }
                ]
            }
        },
        "headers": [
            "utility"
        ]
    },
    {
        "name": "__cpp_lib_constexpr_vector",
        "values": {
            "c++20": {
                "201907": [
                    {
                        "implemented": true
                    }
                ]
            }
        },
        "headers": [
            "vector"
        ]
    },
    {
        "name": "__cpp_lib_constrained_equality",
        "values": {
            "c++26": {
                "202403": [
                    {
                        "number": "P2944R3",
                        "title": "Comparisons for reference_wrapper",
                        "implemented": false
                    }
                ]
            }
        },
        "headers": [
            "optional",
            "tuple",
            "utility",
            "variant"
        ]
    },
    {
        "name": "__cpp_lib_containers_ranges",
        "values": {
            "c++23": {
                "202202": [
                    {
                        "implemented": true
                    }
                ]
            }
        },
        "headers": [
            "deque",
            "forward_list",
            "list",
            "map",
            "queue",
            "set",
            "stack",
            "string",
            "unordered_map",
            "unordered_set",
            "vector"
        ]
    },
    {
        "name": "__cpp_lib_copyable_function",
        "values": {
            "c++26": {
                "202306": [
                    {
                        "number": "P2548R6",
                        "title": "copyable_function",
                        "implemented": false
                    }
                ]
            }
        },
        "headers": [
            "functional"
        ]
    },
    {
        "name": "__cpp_lib_coroutine",
        "values": {
            "c++20": {
                "201902": [
                    {
                        "implemented": true
                    }
                ]
            }
        },
        "headers": [
            "coroutine"
        ]
    },
    {
        "name": "__cpp_lib_debugging",
        "values": {
            "c++26": {
                "202311": [
                    {
                        "number": "P2546R5",
                        "title": "Debugging Support",
                        "implemented": false
                    }
                ],
                "202403": [
                    {
                        "number": "P2810R4",
                        "title": "is_debugger_present is_replaceable",
                        "implemented": false
                    }
                ]
            }
        },
        "headers": [
            "debugging"
        ]
    },
    {
        "name": "__cpp_lib_destroying_delete",
        "values": {
            "c++20": {
                "201806": [
                    {
                        "implemented": true
                    }
                ]
            }
        },
        "headers": [
            "new"
        ],
        "test_suite_guard": "TEST_STD_VER > 17 && defined(__cpp_impl_destroying_delete) && __cpp_impl_destroying_delete >= 201806L",
        "libcxx_guard": "_LIBCPP_STD_VER >= 20 && defined(__cpp_impl_destroying_delete) && __cpp_impl_destroying_delete >= 201806L"
    },
    {
        "name": "__cpp_lib_enable_shared_from_this",
        "values": {
            "c++17": {
                "201603": [
                    {
                        "implemented": true
                    }
                ]
            }
        },
        "headers": [
            "memory"
        ]
    },
    {
        "name": "__cpp_lib_endian",
        "values": {
            "c++20": {
                "201907": [
                    {
                        "implemented": true
                    }
                ]
            }
        },
        "headers": [
            "bit"
        ]
    },
    {
        "name": "__cpp_lib_erase_if",
        "values": {
            "c++20": {
                "202002": [
                    {
                        "implemented": true
                    }
                ]
            }
        },
        "headers": [
            "deque",
            "forward_list",
            "list",
            "map",
            "set",
            "string",
            "unordered_map",
            "unordered_set",
            "vector"
        ]
    },
    {
        "name": "__cpp_lib_exchange_function",
        "values": {
            "c++14": {
                "201304": [
                    {
                        "implemented": true
                    }
                ]
            }
        },
        "headers": [
            "utility"
        ]
    },
    {
        "name": "__cpp_lib_execution",
        "values": {
            "c++17": {
                "201603": [
                    {
                        "number": "P0024R2",
                        "title": "The Parallelism TS Should be Standardized",
                        "implemented": false
                    }
                ]
            },
            "c++20": {
                "201902": [
                    {
                        "number": "P1001R2",
                        "title": "Target Vectorization Policies from Parallelism V2 TS to C++20",
                        "implemented": false
                    }
                ]
            }
        },
        "headers": [
            "execution"
        ]
    },
    {
        "name": "__cpp_lib_expected",
        "values": {
            "c++23": {
                "202211": [
                    {
                        "implemented": true
                    }
                ]
            }
        },
        "headers": [
            "expected"
        ]
    },
    {
        "name": "__cpp_lib_filesystem",
        "values": {
            "c++17": {
                "201703": [
                    {
                        "implemented": true
                    }
                ]
            }
        },
        "headers": [
            "filesystem"
        ],
        "test_suite_guard": "!defined(_LIBCPP_VERSION) || (!defined(_LIBCPP_HAS_NO_FILESYSTEM) && _LIBCPP_AVAILABILITY_HAS_FILESYSTEM_LIBRARY)",
        "libcxx_guard": "!defined(_LIBCPP_HAS_NO_FILESYSTEM) && _LIBCPP_AVAILABILITY_HAS_FILESYSTEM_LIBRARY"
    },
    {
        "name": "__cpp_lib_flat_map",
        "values": {
            "c++23": {
                "202207": [
                    {
                        "number": "P0429R9",
                        "title": "A Standard flat_map",
                        "implemented": false
                    }
                ]
            }
        },
        "headers": [
            "flat_map"
        ]
    },
    {
        "name": "__cpp_lib_flat_set",
        "values": {
            "c++23": {
                "202207": [
                    {
                        "number": "P1222R4",
                        "title": "A Standard flat_set",
                        "implemented": false
                    },
                    {
                        "number": "LWG3751",
                        "title": "Missing feature macro for flat_set",
                        "implemented": false
                    }
                ]
            }
        },
        "headers": [
            "flat_set"
        ]
    },
    {
        "name": "__cpp_lib_format",
        "values": {
            "c++20": {
                "202110": [
                    {
                        "implemented": true
                    }
                ]
            },
            "c++23": {
                "202207": [
                    {
                        "number": "P2419R2",
                        "title": "Clarify handling of encodings in localized formatting of chrono types",
                        "implemented": false
                    },
                    {
                        "number": "P2508R1",
                        "title": "Exposing std::basic-format-string",
                        "implemented": false
                    }
                ]
            },
            "c++26": {
                "202304": [
                    {
                        "number": "P2510R3",
                        "title": "Formatting pointers",
                        "implemented": true
                    }
                ],
                "202305": [
                    {
                        "number": "P2757R3",
                        "title": "Type checking format args",
                        "implemented": false
                    }
                ],
                "202306": [
                    {
                        "number": "P2637R3",
                        "title": "Member visit",
                        "implemented": true
                    }
                ],
                "202311": [
                    {
                        "number": "P2918R2",
                        "title": "Runtime format strings II",
                        "implemented": true
                    }
                ]
            }
        },
        "headers": [
            "format"
        ]
    },
    {
        "name": "__cpp_lib_format_path",
        "values": {
            "c++26": {
                "202403": [
                    {
                        "number": "P2845R8",
                        "title": "Formatting of std::filesystem::path",
                        "implemented": false
                    }
                ]
            }
        },
        "headers": [
            "filesystem"
        ]
    },
    {
        "name": "__cpp_lib_format_ranges",
        "values": {
            "c++23": {
                "202207": [
                    {
                        "implemented": true
                    }
                ]
            }
        },
        "headers": [
            "format"
        ]
    },
    {
        "name": "__cpp_lib_format_uchar",
        "values": {
            "c++20": {
                "202311": [
                    {
                        "implemented": true
                    }
                ]
            }
        },
        "headers": [
            "format"
        ]
    },
    {
        "name": "__cpp_lib_formatters",
        "values": {
            "c++23": {
                "202302": [
                    {
                        "number": "P2693R1",
                        "title": "Formatting thread::id and stacktrace",
                        "implemented": false
                    }
                ]
            }
        },
        "headers": [
            "stacktrace",
            "thread"
        ]
    },
    {
        "name": "__cpp_lib_forward_like",
        "values": {
            "c++23": {
                "202207": [
                    {
                        "implemented": true
                    }
                ]
            }
        },
        "headers": [
            "utility"
        ]
    },
    {
        "name": "__cpp_lib_freestanding_algorithm",
        "values": {
            "c++26": {
                "202311": [
                    {
                        "number": "P2407R5",
                        "title": "Freestanding Library: Partial Classes",
                        "implemented": false
                    }
                ]
            }
        },
        "headers": [
            "algorithm"
        ]
    },
    {
        "name": "__cpp_lib_freestanding_array",
        "values": {
            "c++26": {
                "202311": [
                    {
                        "number": "P2407R5",
                        "title": "Freestanding Library: Partial Classes",
                        "implemented": false
                    }
                ]
            }
        },
        "headers": [
            "array"
        ]
    },
    {
        "name": "__cpp_lib_freestanding_char_traits",
        "values": {
            "c++26": {
                "202306": [
                    {
                        "number": "P2338R4",
                        "title": "Freestanding Library: Character primitives and the C library",
                        "implemented": false
                    }
                ]
            }
        },
        "headers": [
            "string"
        ]
    },
    {
        "name": "__cpp_lib_freestanding_charconv",
        "values": {
            "c++26": {
                "202306": [
                    {
                        "number": "P2338R4",
                        "title": "Freestanding Library: Character primitives and the C library",
                        "implemented": false
                    }
                ]
            }
        },
        "headers": [
            "charconv"
        ]
    },
    {
        "name": "__cpp_lib_freestanding_cstdlib",
        "values": {
            "c++26": {
                "202306": [
                    {
                        "number": "P2338R4",
                        "title": "Freestanding Library: Character primitives and the C library",
                        "implemented": false
                    }
                ]
            }
        },
        "headers": [
            "cmath",
            "cstdlib"
        ]
    },
    {
        "name": "__cpp_lib_freestanding_cstring",
        "values": {
            "c++26": {
                "202306": [
                    {
                        "number": "P2338R4",
                        "title": "Freestanding Library: Character primitives and the C library",
                        "implemented": false
                    }
                ],
                "202311": [
                    {
                        "number": "P2937R0",
                        "title": "Freestanding: Remove strtok",
                        "implemented": false
                    }
                ]
            }
        },
        "headers": [
            "cstring"
        ]
    },
    {
        "name": "__cpp_lib_freestanding_cwchar",
        "values": {
            "c++26": {
                "202306": [
                    {
                        "number": "P2338R4",
                        "title": "Freestanding Library: Character primitives and the C library",
                        "implemented": false
                    }
                ]
            }
        },
        "headers": [
            "cwchar"
        ]
    },
    {
        "name": "__cpp_lib_freestanding_errc",
        "values": {
            "c++26": {
                "202306": [
                    {
                        "number": "P2338R4",
                        "title": "Freestanding Library: Character primitives and the C library",
                        "implemented": false
                    }
                ]
            }
        },
        "headers": [
            "cerrno",
            "system_error"
        ]
    },
    {
        "name": "__cpp_lib_freestanding_expected",
        "values": {
            "c++26": {
                "202311": [
                    {
                        "number": "P2833R2",
                        "title": "Freestanding Library: inout expected span",
                        "implemented": false
                    }
                ]
            }
        },
        "headers": [
            "expected"
        ]
    },
    {
        "name": "__cpp_lib_freestanding_feature_test_macros",
        "values": {
            "c++26": {
                "202306": [
                    {
                        "number": "P2198R7",
                        "title": "Freestanding Feature-Test Macros and Implementation-Defined Extensions",
                        "implemented": false
                    }
                ]
            }
        },
        "headers": [
            ""
        ]
    },
    {
        "name": "__cpp_lib_freestanding_functional",
        "values": {
            "c++26": {
                "202306": [
                    {
                        "number": "P2198R7",
                        "title": "Freestanding Feature-Test Macros and Implementation-Defined Extensions",
                        "implemented": false
                    }
                ]
            }
        },
        "headers": [
            "functional"
        ]
    },
    {
        "name": "__cpp_lib_freestanding_iterator",
        "values": {
            "c++26": {
                "202306": [
                    {
                        "number": "P2198R7",
                        "title": "Freestanding Feature-Test Macros and Implementation-Defined Extensions",
                        "implemented": false
                    }
                ]
            }
        },
        "headers": [
            "iterator"
        ]
    },
    {
        "name": "__cpp_lib_freestanding_mdspan",
        "values": {
            "c++26": {
                "202311": [
                    {
                        "number": "P2833R2",
                        "title": "Freestanding Library: inout expected span",
                        "implemented": false
                    }
                ]
            }
        },
        "headers": [
            "mdspan"
        ]
    },
    {
        "name": "__cpp_lib_freestanding_memory",
        "values": {
            "c++26": {
                "202306": [
                    {
                        "number": "P2198R7",
                        "title": "Freestanding Feature-Test Macros and Implementation-Defined Extensions",
                        "implemented": false
                    }
                ]
            }
        },
        "headers": [
            "memory"
        ]
    },
    {
        "name": "__cpp_lib_freestanding_numeric",
        "values": {
            "c++26": {
                "202311": [
                    {
                        "number": "P0543R3",
                        "title": "Saturation arithmetic",
                        "implemented": false
                    }
                ]
            }
        },
        "headers": [
            "numeric"
        ]
    },
    {
        "name": "__cpp_lib_freestanding_operator_new",
        "values": {
            "c++26": {
                "202306": [
                    {
                        "number": "P2198R7",
                        "title": "Freestanding Feature-Test Macros and Implementation-Defined Extensions",
                        "implemented": false
                    }
                ]
            }
        },
        "headers": [
            "new"
        ]
    },
    {
        "name": "__cpp_lib_freestanding_optional",
        "values": {
            "c++26": {
                "202311": [
                    {
                        "number": "P2407R5",
                        "title": "Freestanding Library: Partial Classes",
                        "implemented": false
                    }
                ]
            }
        },
        "headers": [
            "optional"
        ]
    },
    {
        "name": "__cpp_lib_freestanding_ranges",
        "values": {
            "c++26": {
                "202306": [
                    {
                        "number": "P2198R7",
                        "title": "Freestanding Feature-Test Macros and Implementation-Defined Extensions",
                        "implemented": false
                    }
                ]
            }
        },
        "headers": [
            "ranges"
        ]
    },
    {
        "name": "__cpp_lib_freestanding_ratio",
        "values": {
            "c++26": {
                "202306": [
                    {
                        "number": "P2198R7",
                        "title": "Freestanding Feature-Test Macros and Implementation-Defined Extensions",
                        "implemented": false
                    }
                ]
            }
        },
        "headers": [
            "ratio"
        ]
    },
    {
        "name": "__cpp_lib_freestanding_string_view",
        "values": {
            "c++26": {
                "202311": [
                    {
                        "number": "P2407R5",
                        "title": "Freestanding Library: Partial Classes",
                        "implemented": false
                    }
                ]
            }
        },
        "headers": [
            "string_view"
        ]
    },
    {
        "name": "__cpp_lib_freestanding_tuple",
        "values": {
            "c++26": {
                "202306": [
                    {
                        "number": "P2198R7",
                        "title": "Freestanding Feature-Test Macros and Implementation-Defined Extensions",
                        "implemented": false
                    }
                ]
            }
        },
        "headers": [
            "tuple"
        ]
    },
    {
        "name": "__cpp_lib_freestanding_utility",
        "values": {
            "c++26": {
                "202306": [
                    {
                        "number": "P2198R7",
                        "title": "Freestanding Feature-Test Macros and Implementation-Defined Extensions",
                        "implemented": false
                    }
                ]
            }
        },
        "headers": [
            "utility"
        ]
    },
    {
        "name": "__cpp_lib_freestanding_variant",
        "values": {
            "c++26": {
                "202311": [
                    {
                        "number": "P2407R5",
                        "title": "Freestanding Library: Partial Classes",
                        "implemented": false
                    }
                ]
            }
        },
        "headers": [
            "variant"
        ]
    },
    {
        "name": "__cpp_lib_fstream_native_handle",
        "values": {
            "c++26": {
                "202306": [
                    {
                        "implemented": true
                    }
                ]
            }
        },
        "headers": [
            "fstream"
        ],
        "test_suite_guard": "!defined(_LIBCPP_VERSION) || (!defined(_LIBCPP_HAS_NO_FILESYSTEM) && !defined(_LIBCPP_HAS_NO_LOCALIZATION))",
        "libcxx_guard": "!defined(_LIBCPP_HAS_NO_FILESYSTEM) && !defined(_LIBCPP_HAS_NO_LOCALIZATION)"
    },
    {
        "name": "__cpp_lib_function_ref",
        "values": {
            "c++26": {
                "202306": [
                    {
                        "number": "P0792R14",
                        "title": "function_ref: a non-owning reference to a Callable",
                        "implemented": false
                    }
                ]
            }
        },
        "headers": [
            "functional"
        ]
    },
    {
        "name": "__cpp_lib_gcd_lcm",
        "values": {
            "c++17": {
                "201606": [
                    {
                        "implemented": true
                    }
                ]
            }
        },
        "headers": [
            "numeric"
        ]
    },
    {
        "name": "__cpp_lib_generator",
        "values": {
            "c++23": {
                "202207": [
                    {
                        "number": "P2502R2",
                        "title": "std::generator: Synchronous Coroutine Generator for Ranges",
                        "implemented": false
                    }
                ]
            }
        },
        "headers": [
            "generator"
        ]
    },
    {
        "name": "__cpp_lib_generic_associative_lookup",
        "values": {
            "c++14": {
                "201304": [
                    {
                        "implemented": true
                    }
                ]
            }
        },
        "headers": [
            "map",
            "set"
        ]
    },
    {
        "name": "__cpp_lib_generic_unordered_lookup",
        "values": {
            "c++20": {
                "201811": [
                    {
                        "implemented": true
                    }
                ]
            }
        },
        "headers": [
            "unordered_map",
            "unordered_set"
        ]
    },
    {
        "name": "__cpp_lib_hardware_interference_size",
        "values": {
            "c++17": {
                "201703": [
                    {
                        "implemented": true
                    }
                ]
            }
        },
        "headers": [
            "new"
        ],
        "test_suite_guard": "!defined(_LIBCPP_VERSION) || (defined(__GCC_DESTRUCTIVE_SIZE) && defined(__GCC_CONSTRUCTIVE_SIZE))",
        "libcxx_guard": "defined(__GCC_DESTRUCTIVE_SIZE) && defined(__GCC_CONSTRUCTIVE_SIZE)"
    },
    {
        "name": "__cpp_lib_has_unique_object_representations",
        "values": {
            "c++17": {
                "201606": [
                    {
                        "implemented": true
                    }
                ]
            }
        },
        "headers": [
            "type_traits"
        ]
    },
    {
        "name": "__cpp_lib_hazard_pointer",
        "values": {
            "c++26": {
                "202306": [
                    {
                        "number": "P2530R3",
                        "title": "Hazard Pointers for C++26",
                        "implemented": false
                    }
                ]
            }
        },
        "headers": [
            "hazard_pointer"
        ]
    },
    {
        "name": "__cpp_lib_hypot",
        "values": {
            "c++17": {
                "201603": [
                    {
                        "implemented": true
                    }
                ]
            }
        },
        "headers": [
            "cmath"
        ]
    },
    {
        "name": "__cpp_lib_incomplete_container_elements",
        "values": {
            "c++17": {
                "201505": [
                    {
                        "implemented": true
                    }
                ]
            }
        },
        "headers": [
            "forward_list",
            "list",
            "vector"
        ]
    },
    {
        "name": "__cpp_lib_inplace_vector",
        "values": {
            "c++26": {
                "202406": [
                    {
                        "number": "P0843R14",
                        "title": "inplace_vector",
                        "implemented": false
                    }
                ]
            }
        },
        "headers": [
            "inplace_vector"
        ]
    },
    {
        "name": "__cpp_lib_int_pow2",
        "values": {
            "c++20": {
                "202002": [
                    {
                        "implemented": true
                    }
                ]
            }
        },
        "headers": [
            "bit"
        ]
    },
    {
        "name": "__cpp_lib_integer_comparison_functions",
        "values": {
            "c++20": {
                "202002": [
                    {
                        "implemented": true
                    }
                ]
            }
        },
        "headers": [
            "utility"
        ]
    },
    {
        "name": "__cpp_lib_integer_sequence",
        "values": {
            "c++14": {
                "201304": [
                    {
                        "implemented": true
                    }
                ]
            }
        },
        "headers": [
            "utility"
        ]
    },
    {
        "name": "__cpp_lib_integral_constant_callable",
        "values": {
            "c++14": {
                "201304": [
                    {
                        "implemented": true
                    }
                ]
            }
        },
        "headers": [
            "type_traits"
        ]
    },
    {
        "name": "__cpp_lib_interpolate",
        "values": {
            "c++20": {
                "201902": [
                    {
                        "implemented": true
                    }
                ]
            }
        },
        "headers": [
            "cmath",
            "numeric"
        ]
    },
    {
        "name": "__cpp_lib_invoke",
        "values": {
            "c++17": {
                "201411": [
                    {
                        "implemented": true
                    }
                ]
            }
        },
        "headers": [
            "functional"
        ]
    },
    {
        "name": "__cpp_lib_invoke_r",
        "values": {
            "c++23": {
                "202106": [
                    {
                        "implemented": true
                    }
                ]
            }
        },
        "headers": [
            "functional"
        ]
    },
    {
        "name": "__cpp_lib_ios_noreplace",
        "values": {
            "c++23": {
                "202207": [
                    {
                        "implemented": true
                    }
                ]
            }
        },
        "headers": [
            "ios"
        ]
    },
    {
        "name": "__cpp_lib_is_aggregate",
        "values": {
            "c++17": {
                "201703": [
                    {
                        "implemented": true
                    }
                ]
            }
        },
        "headers": [
            "type_traits"
        ]
    },
    {
        "name": "__cpp_lib_is_constant_evaluated",
        "values": {
            "c++20": {
                "201811": [
                    {
                        "implemented": true
                    }
                ]
            }
        },
        "headers": [
            "type_traits"
        ]
    },
    {
        "name": "__cpp_lib_is_final",
        "values": {
            "c++14": {
                "201402": [
                    {
                        "implemented": true
                    }
                ]
            }
        },
        "headers": [
            "type_traits"
        ]
    },
    {
        "name": "__cpp_lib_is_implicit_lifetime",
        "values": {
            "c++23": {
                "202302": [
                    {
                        "number": "P2674R1",
                        "title": "A trait for implicit lifetime types",
                        "implemented": false
                    }
                ]
            }
        },
        "headers": [
            "type_traits"
        ]
    },
    {
        "name": "__cpp_lib_is_invocable",
        "values": {
            "c++17": {
                "201703": [
                    {
                        "implemented": true
                    }
                ]
            }
        },
        "headers": [
            "type_traits"
        ]
    },
    {
        "name": "__cpp_lib_is_layout_compatible",
        "values": {
            "c++20": {
                "201907": [
                    {
                        "number": "P0466R5",
                        "title": "Layout-compatibility and Pointer-interconvertibility Traits",
                        "implemented": false
                    }
                ]
            }
        },
        "headers": [
            "type_traits"
        ]
    },
    {
        "name": "__cpp_lib_is_nothrow_convertible",
        "values": {
            "c++20": {
                "201806": [
                    {
                        "implemented": true
                    }
                ]
            }
        },
        "headers": [
            "type_traits"
        ]
    },
    {
        "name": "__cpp_lib_is_null_pointer",
        "values": {
            "c++14": {
                "201309": [
                    {
                        "implemented": true
                    }
                ]
            }
        },
        "headers": [
            "type_traits"
        ]
    },
    {
        "name": "__cpp_lib_is_pointer_interconvertible",
        "values": {
            "c++20": {
                "201907": [
                    {
                        "number": "P0466R5",
                        "title": "Layout-compatibility and Pointer-interconvertibility Traits",
                        "implemented": false
                    }
                ]
            }
        },
        "headers": [
            "type_traits"
        ]
    },
    {
        "name": "__cpp_lib_is_scoped_enum",
        "values": {
            "c++23": {
                "202011": [
                    {
                        "implemented": true
                    }
                ]
            }
        },
        "headers": [
            "type_traits"
        ]
    },
    {
        "name": "__cpp_lib_is_swappable",
        "values": {
            "c++17": {
                "201603": [
                    {
                        "implemented": true
                    }
                ]
            }
        },
        "headers": [
            "type_traits"
        ]
    },
    {
        "name": "__cpp_lib_is_virtual_base_of",
        "values": {
            "c++26": {
                "202406": [
                    {
                        "implemented": true
                    }
                ]
            }
        },
        "headers": [
            "type_traits"
        ],
        "test_suite_guard": "__has_builtin(__builtin_is_virtual_base_of)",
        "libcxx_guard": "__has_builtin(__builtin_is_virtual_base_of)"
    },
    {
        "name": "__cpp_lib_is_within_lifetime",
        "values": {
            "c++26": {
                "202306": [
                    {
                        "number": "P2641R4",
                        "title": "Checking if a union alternative is active",
                        "implemented": false
                    }
                ]
            }
        },
        "headers": [
            "type_traits"
        ]
    },
    {
        "name": "__cpp_lib_jthread",
        "values": {
            "c++20": {
                "201911": [
                    {
                        "implemented": true
                    }
                ]
            }
        },
        "headers": [
            "stop_token",
            "thread"
        ],
        "test_suite_guard": "!defined(_LIBCPP_HAS_NO_THREADS) && (!defined(_LIBCPP_VERSION) || _LIBCPP_AVAILABILITY_HAS_SYNC)",
        "libcxx_guard": "!defined(_LIBCPP_HAS_NO_THREADS) && _LIBCPP_AVAILABILITY_HAS_SYNC"
    },
    {
        "name": "__cpp_lib_latch",
        "values": {
            "c++20": {
                "201907": [
                    {
                        "implemented": true
                    }
                ]
            }
        },
        "headers": [
            "latch"
        ],
        "test_suite_guard": "!defined(_LIBCPP_HAS_NO_THREADS) && (!defined(_LIBCPP_VERSION) || _LIBCPP_AVAILABILITY_HAS_SYNC)",
        "libcxx_guard": "!defined(_LIBCPP_HAS_NO_THREADS) && _LIBCPP_AVAILABILITY_HAS_SYNC"
    },
    {
        "name": "__cpp_lib_launder",
        "values": {
            "c++17": {
                "201606": [
                    {
                        "implemented": true
                    }
                ]
            }
        },
        "headers": [
            "new"
        ]
    },
    {
        "name": "__cpp_lib_linalg",
        "values": {
            "c++26": {
                "202311": [
                    {
                        "number": "P1673R13",
                        "title": "A free function linear algebra interface based on the BLAS",
                        "implemented": false
                    }
                ]
            }
        },
        "headers": [
            "linalg"
        ]
    },
    {
        "name": "__cpp_lib_list_remove_return_type",
        "values": {
            "c++20": {
                "201806": [
                    {
                        "implemented": true
                    }
                ]
            }
        },
        "headers": [
            "forward_list",
            "list"
        ]
    },
    {
        "name": "__cpp_lib_logical_traits",
        "values": {
            "c++17": {
                "201510": [
                    {
                        "implemented": true
                    }
                ]
            }
        },
        "headers": [
            "type_traits"
        ]
    },
    {
        "name": "__cpp_lib_make_from_tuple",
        "values": {
            "c++17": {
                "201606": [
                    {
                        "implemented": true
                    }
                ]
            }
        },
        "headers": [
            "tuple"
        ]
    },
    {
        "name": "__cpp_lib_make_reverse_iterator",
        "values": {
            "c++14": {
                "201402": [
                    {
                        "implemented": true
                    }
                ]
            }
        },
        "headers": [
            "iterator"
        ]
    },
    {
        "name": "__cpp_lib_make_unique",
        "values": {
            "c++14": {
                "201304": [
                    {
                        "implemented": true
                    }
                ]
            }
        },
        "headers": [
            "memory"
        ]
    },
    {
        "name": "__cpp_lib_map_try_emplace",
        "values": {
            "c++17": {
                "201411": [
                    {
                        "implemented": true
                    }
                ]
            }
        },
        "headers": [
            "map"
        ]
    },
    {
        "name": "__cpp_lib_math_constants",
        "values": {
            "c++20": {
                "201907": [
                    {
                        "implemented": true
                    }
                ]
            }
        },
        "headers": [
            "numbers"
        ]
    },
    {
        "name": "__cpp_lib_math_special_functions",
        "values": {
            "c++17": {
                "201603": [
                    {
                        "number": "P0226R1",
                        "title": "Mathematical Special Functions for C++17, v5",
                        "implemented": false
                    }
                ]
            }
        },
        "headers": [
            "cmath"
        ]
    },
    {
        "name": "__cpp_lib_mdspan",
        "values": {
            "c++23": {
                "202207": [
                    {
                        "implemented": true
                    }
                ]
            },
            "c++26": {
                "202406": [
                    {
                        "implemented": true
                    }
                ]
            }
        },
        "headers": [
            "mdspan"
        ]
    },
    {
        "name": "__cpp_lib_memory_resource",
        "values": {
            "c++17": {
                "201603": [
                    {
                        "implemented": true
                    }
                ]
            }
        },
        "headers": [
            "memory_resource"
        ],
        "test_suite_guard": "!defined(_LIBCPP_VERSION) || _LIBCPP_AVAILABILITY_HAS_PMR",
        "libcxx_guard": "_LIBCPP_AVAILABILITY_HAS_PMR"
    },
    {
        "name": "__cpp_lib_modules",
        "values": {
            "c++23": {
                "202207": [
                    {
                        "implemented": true
                    }
                ]
            }
        },
        "headers": [
            ""
        ]
    },
    {
        "name": "__cpp_lib_move_iterator_concept",
        "values": {
            "c++20": {
                "202207": [
                    {
                        "implemented": true
                    }
                ]
            }
        },
        "headers": [
            "iterator"
        ]
    },
    {
        "name": "__cpp_lib_move_only_function",
        "values": {
            "c++23": {
                "202110": [
                    {
                        "number": "P0288R9",
                        "title": "move_only_function (was any_invocable)",
                        "implemented": false
                    }
                ]
            }
        },
        "headers": [
            "functional"
        ]
    },
    {
        "name": "__cpp_lib_node_extract",
        "values": {
            "c++17": {
                "201606": [
                    {
                        "implemented": true
                    }
                ]
            }
        },
        "headers": [
            "map",
            "set",
            "unordered_map",
            "unordered_set"
        ]
    },
    {
        "name": "__cpp_lib_nonmember_container_access",
        "values": {
            "c++17": {
                "201411": [
                    {
                        "implemented": true
                    }
                ]
            }
        },
        "headers": [
            "array",
            "deque",
            "forward_list",
            "iterator",
            "list",
            "map",
            "regex",
            "set",
            "string",
            "unordered_map",
            "unordered_set",
            "vector"
        ]
    },
    {
        "name": "__cpp_lib_not_fn",
        "values": {
            "c++17": {
                "201603": [
                    {
                        "implemented": true
                    }
                ]
            },
            "c++26": {
                "202306": [
                    {
                        "number": "P2714R1",
                        "title": "Bind front and back to NTTP callables",
                        "implemented": false
                    }
                ]
            }
        },
        "headers": [
            "functional"
        ]
    },
    {
        "name": "__cpp_lib_null_iterators",
        "values": {
            "c++14": {
                "201304": [
                    {
                        "implemented": true
                    }
                ]
            }
        },
        "headers": [
            "iterator"
        ]
    },
    {
        "name": "__cpp_lib_optional",
        "values": {
            "c++17": {
                "201606": [
                    {
                        "implemented": true
                    }
                ]
            },
            "c++23": {
                "202110": [
                    {
                        "implemented": true
                    }
                ]
            }
        },
        "headers": [
            "optional"
        ]
    },
    {
        "name": "__cpp_lib_optional_range_support",
        "values": {
            "c++26": {
                "202406": [
                    {
                        "number": "P3168R2",
                        "title": "Give std::optional Range Support",
                        "implemented": false
                    }
                ]
            }
        },
        "headers": [
            "optional"
        ]
    },
    {
        "name": "__cpp_lib_out_ptr",
        "values": {
            "c++23": {
                "202106": [
                    {
                        "implemented": true
                    }
                ]
            },
            "c++26": {
                "202311": [
                    {
                        "implemented": true
                    }
                ]
            }
        },
        "headers": [
            "memory"
        ]
    },
    {
        "name": "__cpp_lib_parallel_algorithm",
        "values": {
            "c++17": {
                "201603": [
                    {
                        "number": "P0024R2",
                        "title": "The Parallelism TS Should be Standardized",
                        "implemented": false
                    }
                ]
            }
        },
        "headers": [
            "algorithm",
            "numeric"
        ]
    },
    {
        "name": "__cpp_lib_philox_engine",
        "values": {
            "c++26": {
                "202406": [
                    {
                        "number": "P2075R6",
                        "title": "Philox as an extension of the C++ RNG engines",
                        "implemented": false
                    }
                ]
            }
        },
        "headers": [
            "random"
        ]
    },
    {
        "name": "__cpp_lib_polymorphic_allocator",
        "values": {
            "c++20": {
                "201902": [
                    {
                        "implemented": true
                    }
                ]
            }
        },
        "headers": [
            "memory_resource"
        ],
        "test_suite_guard": "!defined(_LIBCPP_VERSION) || _LIBCPP_AVAILABILITY_HAS_PMR",
        "libcxx_guard": "_LIBCPP_AVAILABILITY_HAS_PMR"
    },
    {
        "name": "__cpp_lib_print",
        "values": {
            "c++23": {
                "202207": [
                    {
                        "implemented": true
                    }
                ]
            },
            "c++26": {
                "202403": [
                    {
                        "number": "P3107R5",
                        "title": "Permit an efficient implementation of std::print",
                        "implemented": false
                    }
                ],
                "202406": [
                    {
                        "number": "P3235R3",
                        "title": "std::print more types faster with less memory",
                        "implemented": false
                    }
                ]
            }
        },
        "headers": [
            "ostream",
            "print"
        ]
    },
    {
        "name": "__cpp_lib_quoted_string_io",
        "values": {
            "c++14": {
                "201304": [
                    {
                        "implemented": true
                    }
                ]
            }
        },
        "headers": [
            "iomanip"
        ],
        "test_suite_guard": "!defined(_LIBCPP_VERSION) || !defined(_LIBCPP_HAS_NO_LOCALIZATION)",
        "libcxx_guard": "!defined(_LIBCPP_HAS_NO_LOCALIZATION)"
    },
    {
        "name": "__cpp_lib_ranges",
        "values": {
            "c++20": {
                "202110": [
                    {
                        "implemented": true
                    }
                ]
            },
            "c++23": {
                "202406": [
                    {
                        "implemented": true
                    }
                ]
            }
        },
        "headers": [
            "algorithm",
            "functional",
            "iterator",
            "memory",
            "ranges"
        ]
    },
    {
        "name": "__cpp_lib_ranges_as_const",
        "values": {
            "c++23": {
                "202207": [
                    {
                        "number": "P2278R4",
                        "title": "cbegin should always return a constant iterator",
                        "implemented": false
                    }
                ]
            },
            "c++26": {
                "202311": [
                    {
                        "number": "P2836R1",
                        "title": "std::basic_const_iterator should follow its underlying type's convertibility",
                        "implemented": false
                    }
                ]
            }
        },
        "headers": [
            "ranges"
        ]
    },
    {
        "name": "__cpp_lib_ranges_as_rvalue",
        "values": {
            "c++23": {
                "202207": [
                    {
                        "implemented": true
                    }
                ]
            }
        },
        "headers": [
            "ranges"
        ]
    },
    {
        "name": "__cpp_lib_ranges_cartesian_product",
        "values": {
            "c++23": {
                "202207": [
                    {
                        "number": "P2374R4",
                        "title": "views::cartesian_product",
                        "implemented": false
                    },
                    {
                        "number": "P2540R1",
                        "title": "Empty Product for certain Views",
                        "implemented": false
                    }
                ]
            }
        },
        "headers": [
            "ranges"
        ]
    },
    {
        "name": "__cpp_lib_ranges_chunk",
        "values": {
            "c++23": {
                "202202": [
                    {
                        "number": "P2442R1",
                        "title": "Windowing range adaptors: views::chunk and views::slide",
                        "implemented": false
                    }
                ]
            }
        },
        "headers": [
            "ranges"
        ]
    },
    {
        "name": "__cpp_lib_ranges_chunk_by",
        "values": {
            "c++23": {
                "202202": [
                    {
                        "implemented": true
                    }
                ]
            }
        },
        "headers": [
            "ranges"
        ]
    },
    {
        "name": "__cpp_lib_ranges_concat",
        "values": {
            "c++26": {
                "202403": [
                    {
                        "number": "P2542R8",
                        "title": "views::concat",
                        "implemented": false
                    }
                ]
            }
        },
        "headers": [
            "ranges"
        ]
    },
    {
        "name": "__cpp_lib_ranges_contains",
        "values": {
            "c++23": {
                "202207": [
                    {
                        "implemented": true
                    }
                ]
            }
        },
        "headers": [
            "algorithm"
        ]
    },
    {
        "name": "__cpp_lib_ranges_enumerate",
        "values": {
            "c++23": {
                "202302": [
                    {
                        "number": "P2164R9",
                        "title": "views::enumerate",
                        "implemented": false
                    }
                ]
            }
        },
        "headers": [
            "ranges"
        ]
    },
    {
        "name": "__cpp_lib_ranges_find_last",
        "values": {
            "c++23": {
                "202207": [
                    {
                        "implemented": true
                    }
                ]
            }
        },
        "headers": [
            "algorithm"
        ]
    },
    {
        "name": "__cpp_lib_ranges_fold",
        "values": {
            "c++23": {
                "202207": [
                    {
                        "number": "P2322R6",
                        "title": "ranges::fold",
                        "implemented": false
                    }
                ]
            }
        },
        "headers": [
            "algorithm"
        ]
    },
    {
        "name": "__cpp_lib_ranges_generate_random",
        "values": {
            "c++26": {
                "202403": [
                    {
                        "number": "P1068R11",
                        "title": "Vector API for random number generation",
                        "implemented": false
                    }
                ]
            }
        },
        "headers": [
            "random"
        ]
    },
    {
        "name": "__cpp_lib_ranges_iota",
        "values": {
            "c++23": {
                "202202": [
                    {
                        "number": "P2440R1",
                        "title": "ranges::iota, ranges::shift_left, and ranges::shift_right",
                        "implemented": false
                    }
                ]
            }
        },
        "headers": [
            "numeric"
        ]
    },
    {
        "name": "__cpp_lib_ranges_join_with",
        "values": {
            "c++23": {
                "202202": [
                    {
                        "number": "P2441R2",
                        "title": "views::join_with",
                        "implemented": false
                    }
                ]
            }
        },
        "headers": [
            "ranges"
        ]
    },
    {
        "name": "__cpp_lib_ranges_repeat",
        "values": {
            "c++23": {
                "202207": [
                    {
                        "implemented": true
                    }
                ]
            }
        },
        "headers": [
            "ranges"
        ]
    },
    {
        "name": "__cpp_lib_ranges_slide",
        "values": {
            "c++23": {
                "202202": [
                    {
                        "number": "P2442R1",
                        "title": "Windowing range adaptors: views::chunk and views::slide",
                        "implemented": false
                    }
                ]
            }
        },
        "headers": [
            "ranges"
        ]
    },
    {
        "name": "__cpp_lib_ranges_starts_ends_with",
        "values": {
            "c++23": {
                "202106": [
                    {
                        "implemented": true
                    }
                ]
            }
        },
        "headers": [
            "algorithm"
        ]
    },
    {
        "name": "__cpp_lib_ranges_stride",
        "values": {
            "c++23": {
                "202207": [
                    {
                        "number": "P1899R3",
                        "title": "stride_view",
                        "implemented": false
                    }
                ]
            }
        },
        "headers": [
            "ranges"
        ]
    },
    {
        "name": "__cpp_lib_ranges_to_container",
        "values": {
            "c++23": {
                "202202": [
                    {
                        "implemented": true
                    }
                ]
            }
        },
        "headers": [
            "ranges"
        ]
    },
    {
        "name": "__cpp_lib_ranges_zip",
        "values": {
            "c++23": {
                "202110": [
                    {
                        "number": "P2321R2",
                        "title": "zip",
                        "implemented": false
                    }
                ]
            }
        },
        "headers": [
            "ranges",
            "tuple",
            "utility"
        ]
    },
    {
        "name": "__cpp_lib_ratio",
        "values": {
            "c++26": {
                "202306": [
                    {
                        "implemented": true
                    }
                ]
            }
        },
        "headers": [
            "ratio"
        ]
    },
    {
        "name": "__cpp_lib_raw_memory_algorithms",
        "values": {
            "c++17": {
                "201606": [
                    {
                        "implemented": true
                    }
                ]
            }
        },
        "headers": [
            "memory"
        ]
    },
    {
        "name": "__cpp_lib_rcu",
        "values": {
            "c++26": {
                "202306": [
                    {
                        "number": "P2545R4",
                        "title": "Read-Copy Update (RCU)",
                        "implemented": false
                    }
                ]
            }
        },
        "headers": [
            "rcu"
        ]
    },
    {
        "name": "__cpp_lib_reference_from_temporary",
        "values": {
            "c++23": {
                "202202": [
                    {
                        "number": "P2255R2",
                        "title": "A type trait to detect reference binding to temporary",
                        "implemented": false
                    }
                ]
            }
        },
        "headers": [
            "type_traits"
        ]
    },
    {
        "name": "__cpp_lib_reference_wrapper",
        "values": {
            "c++26": {
                "202403": [
                    {
                        "implemented": true
                    }
                ]
            }
        },
        "headers": [
            "functional"
        ]
    },
    {
        "name": "__cpp_lib_remove_cvref",
        "values": {
            "c++20": {
                "201711": [
                    {
                        "implemented": true
                    }
                ]
            }
        },
        "headers": [
            "type_traits"
        ]
    },
    {
        "name": "__cpp_lib_result_of_sfinae",
        "values": {
            "c++14": {
                "201210": [
                    {
                        "implemented": true
                    }
                ]
            }
        },
        "headers": [
            "functional",
            "type_traits"
        ]
    },
    {
        "name": "__cpp_lib_robust_nonmodifying_seq_ops",
        "values": {
            "c++14": {
                "201304": [
                    {
                        "implemented": true
                    }
                ]
            }
        },
        "headers": [
            "algorithm"
        ]
    },
    {
        "name": "__cpp_lib_sample",
        "values": {
            "c++17": {
                "201603": [
                    {
                        "implemented": true
                    }
                ]
            }
        },
        "headers": [
            "algorithm"
        ]
    },
    {
        "name": "__cpp_lib_saturation_arithmetic",
        "values": {
            "c++26": {
                "202311": [
                    {
                        "implemented": true
                    }
                ]
            }
        },
        "headers": [
            "numeric"
        ]
    },
    {
        "name": "__cpp_lib_scoped_lock",
        "values": {
            "c++17": {
                "201703": [
                    {
                        "implemented": true
                    }
                ]
            }
        },
        "headers": [
            "mutex"
        ],
        "test_suite_guard": "!defined(_LIBCPP_HAS_NO_THREADS)",
        "libcxx_guard": "!defined(_LIBCPP_HAS_NO_THREADS)"
    },
    {
        "name": "__cpp_lib_semaphore",
        "values": {
            "c++20": {
                "201907": [
                    {
                        "implemented": true
                    }
                ]
            }
        },
        "headers": [
            "semaphore"
        ],
        "test_suite_guard": "!defined(_LIBCPP_HAS_NO_THREADS) && (!defined(_LIBCPP_VERSION) || _LIBCPP_AVAILABILITY_HAS_SYNC)",
        "libcxx_guard": "!defined(_LIBCPP_HAS_NO_THREADS) && _LIBCPP_AVAILABILITY_HAS_SYNC"
    },
    {
        "name": "__cpp_lib_senders",
        "values": {
            "c++26": {
                "202406": [
                    {
                        "number": "P2300R10",
                        "title": "`std::execution`",
                        "implemented": false
                    }
                ]
            }
        },
        "headers": [
            "execution"
        ]
    },
    {
        "name": "__cpp_lib_shared_mutex",
        "values": {
            "c++17": {
                "201505": [
                    {
                        "implemented": true
                    }
                ]
            }
        },
        "headers": [
            "shared_mutex"
        ],
        "test_suite_guard": "!defined(_LIBCPP_HAS_NO_THREADS)",
        "libcxx_guard": "!defined(_LIBCPP_HAS_NO_THREADS)"
    },
    {
        "name": "__cpp_lib_shared_ptr_arrays",
        "values": {
            "c++17": {
                "201611": [
                    {
                        "implemented": true
                    }
                ]
            },
            "c++20": {
                "201707": [
                    {
                        "implemented": true
                    }
                ]
            }
        },
        "headers": [
            "memory"
        ]
    },
    {
        "name": "__cpp_lib_shared_ptr_weak_type",
        "values": {
            "c++17": {
                "201606": [
                    {
                        "implemented": true
                    }
                ]
            }
        },
        "headers": [
            "memory"
        ]
    },
    {
        "name": "__cpp_lib_shared_timed_mutex",
        "values": {
            "c++14": {
                "201402": [
                    {
                        "implemented": true
                    }
                ]
            }
        },
        "headers": [
            "shared_mutex"
        ],
        "test_suite_guard": "!defined(_LIBCPP_HAS_NO_THREADS)",
        "libcxx_guard": "!defined(_LIBCPP_HAS_NO_THREADS)"
    },
    {
        "name": "__cpp_lib_shift",
        "values": {
            "c++20": {
                "201806": [
                    {
                        "implemented": true
                    }
                ]
            },
            "c++23": {
                "202202": [
                    {
                        "number": "P2440R1",
                        "title": "ranges::iota, ranges::shift_left, and ranges::shift_right",
                        "implemented": false
                    }
                ]
            }
        },
        "headers": [
            "algorithm"
        ]
    },
    {
        "name": "__cpp_lib_smart_ptr_for_overwrite",
        "values": {
            "c++20": {
                "202002": [
                    {
                        "number": "P1020R1",
                        "title": "Smart pointer creation with default initialization",
                        "implemented": false
                    },
                    {
                        "number": "P1973R1",
                        "title": "Rename _default_init functions (NB Comment DE002)",
                        "implemented": false
                    }
                ]
            }
        },
        "headers": [
            "memory"
        ]
    },
    {
        "name": "__cpp_lib_smart_ptr_owner_equality",
        "values": {
            "c++26": {
                "202306": [
                    {
                        "number": "P1901R2",
                        "title": "Enabling the Use of weak_ptr as Keys in Unordered Associative Containers",
                        "implemented": false
                    }
                ]
            }
        },
        "headers": [
            "memory"
        ]
    },
    {
        "name": "__cpp_lib_source_location",
        "values": {
            "c++20": {
                "201907": [
                    {
                        "implemented": true
                    }
                ]
            }
        },
        "headers": [
            "source_location"
        ]
    },
    {
        "name": "__cpp_lib_span",
        "values": {
            "c++20": {
                "202002": [
                    {
                        "implemented": true
                    }
                ]
            },
            "c++26": {
                "202311": [
                    {
                        "number": "P2821R5",
                        "title": "span.at()",
                        "implemented": false
                    },
                    {
                        "number": "P2833R2",
                        "title": "Freestanding Library: inout expected span",
                        "implemented": false
                    }
                ]
            }
        },
        "headers": [
            "span"
        ]
    },
    {
        "name": "__cpp_lib_span_initializer_list",
        "values": {
            "c++26": {
                "202311": [
                    {
                        "implemented": true
                    }
                ]
            }
        },
        "headers": [
            "span"
        ]
    },
    {
        "name": "__cpp_lib_spanstream",
        "values": {
            "c++23": {
                "202106": [
                    {
                        "number": "P0448R4",
                        "title": "A strstream replacement using span as buffer",
                        "implemented": false
                    }
                ]
            }
        },
        "headers": [
            "spanstream"
        ]
    },
    {
        "name": "__cpp_lib_ssize",
        "values": {
            "c++20": {
                "201902": [
                    {
                        "implemented": true
                    }
                ]
            }
        },
        "headers": [
            "iterator"
        ]
    },
    {
        "name": "__cpp_lib_sstream_from_string_view",
        "values": {
            "c++26": {
                "202306": [
                    {
                        "implemented": true
                    }
                ]
            }
        },
        "headers": [
            "sstream"
        ]
    },
    {
        "name": "__cpp_lib_stacktrace",
        "values": {
            "c++23": {
                "202011": [
                    {
                        "number": "P0881R7",
                        "title": "A Proposal to add stacktrace library",
                        "implemented": false
                    }
                ]
            }
        },
        "headers": [
            "stacktrace"
        ]
    },
    {
        "name": "__cpp_lib_start_lifetime_as",
        "values": {
            "c++23": {
                "202207": [
                    {
                        "number": "P2590R2",
                        "title": "Explicit lifetime management",
                        "implemented": false
                    }
                ]
            }
        },
        "headers": [
            "memory"
        ]
    },
    {
        "name": "__cpp_lib_starts_ends_with",
        "values": {
            "c++20": {
                "201711": [
                    {
                        "implemented": true
                    }
                ]
            }
        },
        "headers": [
            "string",
            "string_view"
        ]
    },
    {
        "name": "__cpp_lib_stdatomic_h",
        "values": {
            "c++23": {
                "202011": [
                    {
                        "implemented": true
                    }
                ]
            }
        },
        "headers": [
            "stdatomic.h"
        ]
    },
    {
        "name": "__cpp_lib_string_contains",
        "values": {
            "c++23": {
                "202011": [
                    {
                        "implemented": true
                    }
                ]
            }
        },
        "headers": [
            "string",
            "string_view"
        ]
    },
    {
        "name": "__cpp_lib_string_resize_and_overwrite",
        "values": {
            "c++23": {
                "202110": [
                    {
                        "implemented": true
                    }
                ]
            }
        },
        "headers": [
            "string"
        ]
    },
    {
        "name": "__cpp_lib_string_udls",
        "values": {
            "c++14": {
                "201304": [
                    {
                        "implemented": true
                    }
                ]
            }
        },
        "headers": [
            "string"
        ]
    },
    {
        "name": "__cpp_lib_string_view",
        "values": {
            "c++17": {
                "201606": [
                    {
                        "implemented": true
                    }
                ]
            },
            "c++20": {
                "201803": [
                    {
                        "implemented": true
                    }
                ]
            },
            "c++26": {
                "202403": [
                    {
                        "implemented": true
                    }
                ]
            }
        },
        "headers": [
            "string",
            "string_view"
        ]
    },
    {
        "name": "__cpp_lib_submdspan",
        "values": {
            "c++26": {
                "202306": [
                    {
                        "number": "P2630R4",
                        "title": "Submdspan",
                        "implemented": false
                    }
                ],
                "202403": [
                    {
                        "number": "P2642R6",
                        "title": "Padded mdspan layouts",
                        "implemented": false
                    }
                ]
            }
        },
        "headers": [
            "mdspan"
        ]
    },
    {
        "name": "__cpp_lib_syncbuf",
        "values": {
            "c++20": {
                "201803": [
                    {
                        "implemented": true
                    }
                ]
            }
        },
        "headers": [
            "syncstream"
        ],
        "test_suite_guard": "!defined(_LIBCPP_HAS_NO_EXPERIMENTAL_SYNCSTREAM)",
        "libcxx_guard": "!defined(_LIBCPP_HAS_NO_EXPERIMENTAL_SYNCSTREAM)"
    },
    {
        "name": "__cpp_lib_text_encoding",
        "values": {
            "c++26": {
                "202306": [
                    {
                        "number": "P1885R12",
                        "title": "Naming Text Encodings to Demystify Them",
                        "implemented": false
                    }
                ]
            }
        },
        "headers": [
            "text_encoding"
        ]
    },
    {
        "name": "__cpp_lib_three_way_comparison",
        "values": {
            "c++20": {
                "201907": [
                    {
                        "implemented": true
                    }
                ]
            }
        },
        "headers": [
            "compare"
        ]
    },
    {
        "name": "__cpp_lib_to_address",
        "values": {
            "c++20": {
                "201711": [
                    {
                        "implemented": true
                    }
                ]
            }
        },
        "headers": [
            "memory"
        ]
    },
    {
        "name": "__cpp_lib_to_array",
        "values": {
            "c++20": {
                "201907": [
                    {
                        "implemented": true
                    }
                ]
            }
        },
        "headers": [
            "array"
        ]
    },
    {
        "name": "__cpp_lib_to_chars",
        "values": {
            "c++17": {
                "201611": [
                    {
                        "number": "P0067R5",
                        "title": "Elementary string conversions, revision 5",
                        "implemented": false
                    },
                    {
                        "number": "P0682R1",
                        "title": "Repairing elementary string conversions",
                        "implemented": false
                    },
                    {
                        "number": "LWG3137",
                        "title": "Header for __cpp_lib_to_chars",
                        "implemented": false
                    }
                ]
            },
            "c++26": {
                "202306": [
                    {
                        "number": "P2497R0",
                        "title": "Testing for success or failure of charconv functions",
                        "implemented": false
                    }
                ]
            }
        },
        "headers": [
            "charconv"
        ]
    },
    {
        "name": "__cpp_lib_to_string",
        "values": {
            "c++26": {
                "202306": [
                    {
                        "number": "P2587R3",
                        "title": "to_string or not to_string",
                        "implemented": false
                    }
                ]
            }
        },
        "headers": [
            "string"
        ]
    },
    {
        "name": "__cpp_lib_to_underlying",
        "values": {
            "c++23": {
                "202102": [
                    {
                        "implemented": true
                    }
                ]
            }
        },
        "headers": [
            "utility"
        ]
    },
    {
        "name": "__cpp_lib_transformation_trait_aliases",
        "values": {
            "c++14": {
                "201304": [
                    {
                        "implemented": true
                    }
                ]
            }
        },
        "headers": [
            "type_traits"
        ]
    },
    {
        "name": "__cpp_lib_transparent_operators",
        "values": {
            "c++14": {
                "201210": [
                    {
                        "implemented": true
                    }
                ]
            },
            "c++17": {
                "201510": [
                    {
                        "implemented": true
                    }
                ]
            }
        },
        "headers": [
            "functional",
            "memory"
        ]
    },
    {
        "name": "__cpp_lib_tuple_element_t",
        "values": {
            "c++14": {
                "201402": [
                    {
                        "implemented": true
                    }
                ]
            }
        },
        "headers": [
            "tuple"
        ]
    },
    {
        "name": "__cpp_lib_tuple_like",
        "values": {
            "c++23": {
                "202207": [
                    {
                        "number": "P2165R4",
                        "title": "Compatibility between tuple, pair and tuple-like objects",
                        "implemented": false
                    }
                ]
            },
            "c++26": {
                "202311": [
                    {
                        "number": "P2819R2",
                        "title": "Add tuple protocol to complex",
                        "implemented": true
                    }
                ]
            }
        },
        "headers": [
            "map",
            "tuple",
            "unordered_map",
            "utility"
        ]
    },
    {
        "name": "__cpp_lib_tuples_by_type",
        "values": {
            "c++14": {
                "201304": [
                    {
                        "implemented": true
                    }
                ]
            }
        },
        "headers": [
            "tuple",
            "utility"
        ]
    },
    {
        "name": "__cpp_lib_type_identity",
        "values": {
            "c++20": {
                "201806": [
                    {
                        "implemented": true
                    }
                ]
            }
        },
        "headers": [
            "type_traits"
        ]
    },
    {
        "name": "__cpp_lib_type_trait_variable_templates",
        "values": {
            "c++17": {
                "201510": [
                    {
                        "implemented": true
                    }
                ]
            }
        },
        "headers": [
            "type_traits"
        ]
    },
    {
        "name": "__cpp_lib_uncaught_exceptions",
        "values": {
            "c++17": {
                "201411": [
                    {
                        "implemented": true
                    }
                ]
            }
        },
        "headers": [
            "exception"
        ]
    },
    {
        "name": "__cpp_lib_unordered_map_try_emplace",
        "values": {
            "c++17": {
                "201411": [
                    {
                        "implemented": true
                    }
                ]
            }
        },
        "headers": [
            "unordered_map"
        ]
    },
    {
        "name": "__cpp_lib_unreachable",
        "values": {
            "c++23": {
                "202202": [
                    {
                        "implemented": true
                    }
                ]
            }
        },
        "headers": [
            "utility"
        ]
    },
    {
        "name": "__cpp_lib_unwrap_ref",
        "values": {
            "c++20": {
                "201811": [
                    {
                        "implemented": true
                    }
                ]
            }
        },
        "headers": [
            "type_traits"
        ]
    },
    {
        "name": "__cpp_lib_variant",
        "values": {
            "c++17": {
                "202102": [
                    {
                        "implemented": true
                    }
                ]
            },
            "c++23": {
                "202106": [
                    {
                        "number": "P2231R1",
                        "title": "Add further constexpr support for optional/variant",
                        "implemented": false
                    }
                ]
            },
            "c++26": {
                "202306": [
                    {
                        "number": "P2637R3",
                        "title": "Member visit",
                        "implemented": true
                    }
                ]
            }
        },
        "headers": [
            "variant"
        ]
    },
    {
        "name": "__cpp_lib_void_t",
        "values": {
            "c++17": {
                "201411": [
                    {
                        "implemented": true
                    }
                ]
            }
        },
        "headers": [
            "type_traits"
        ]
    }
]
